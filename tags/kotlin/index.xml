<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kotlin on DevOps journey</title>
    <link>https://matteoguadrini.github.io/tags/kotlin/</link>
    <description>Recent content in kotlin on DevOps journey</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Matteo Guadrini</copyright>
    <lastBuildDate>Sun, 01 Aug 2021 12:36:58 +0100</lastBuildDate><atom:link href="https://matteoguadrini.github.io/tags/kotlin/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Either Data Type</title>
      <link>https://matteoguadrini.github.io/posts/either-data-type/</link>
      <pubDate>Sun, 01 Aug 2021 12:36:58 +0100</pubDate>
      
      <guid>https://matteoguadrini.github.io/posts/either-data-type/</guid>
      <description>A new data type Before talking about the Either data type, we need to know what a data type is.
A data type is an abstraction that encapsulates one reusable coding pattern.
In our case, the Either data type encapsulates two other objects: Left and Right. These two objects represent Error and Success respectively.
This is a common pattern for Functional Programming.
Left and Right Left and Right, are classes wich represent the error and success data.</description>
    </item>
    
  </channel>
</rss>
